<project name="FIWS_2.0" default="run" basedir=".">
 	<description>Builds, tests, and runs the FIWS_2.0.</description>
	<property name="src.dir" value="src" />
   	<property name="build.dir" value="build" />
	<property name="lib.dir" value="lib" />
	<property name="data.dir" value="data" />
	<property name="class.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${build.dir}/jar" />
	<property name="resources.dir" value="resources" />
	<property name="doc.dir" value="doc" />
	<property name="packages" value="central,cli,data,gui,logging,modalWindows,proxyUnit,rmi,testingUnit" />
	
	<property name="jar_resources.dir" value="${class.dir}/resources" />
	<property name="jar_lib.dir" value="${jar.dir}/lib" />
	<property name="build_data.dir" value="${jar.dir}/data" />
	<property name="jar.file" value="./${ant.project.name}.jar" />
	
	<property name="dep_cp" value="${toString:dep.runtime}" />

	<path id="dep.runtime">
	    <fileset dir="./lib">
	        <include name="**/*.jar" />
	    	<include name="**/*.properties" />
	    </fileset>
	</path>
	
	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>
	
	<target name="init" depends="clean">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${class.dir}" />
		<mkdir dir="${jar.dir}" />
		<mkdir dir="${doc.dir}" />
		<mkdir dir="${jar_lib.dir}" />
		<mkdir dir="${build_data.dir}" />	
		<copy todir="${jar_lib.dir}">
			<fileset dir="${lib.dir}"/>
		</copy>
		<copy todir="${jar_resources.dir}">
			<fileset dir="${resources.dir}"/>
		</copy>
		<copy todir="${jar_resources2.dir}">
					<fileset dir="${resources.dir}"/>
			</copy>
	</target>
	
	<target name="build" depends="init">
		<echo>Compile from ${src.dir} to ${build.dir}</echo>
		<javac destdir="${class.dir}" srcdir="${src.dir}" includeantruntime="false">
	    	<classpath refid="dep.runtime"/>
	    </javac>
	</target>
	
	
	
	<target name="jar" depends="build">
		<manifestclasspath property="manifest_cp" jarfile="${jar.file}">
			<classpath refid="dep.runtime" />
		</manifestclasspath>
		<jar destfile="${jar.file}" basedir="${class.dir}">
			<manifest>
		    	<attribute name="Main-Class" value="cz.vutbr.fit.dp.xzelin15.central.Main"/>
				<attribute name="Class-Path" value="${manifest_cp}" />
			</manifest>
		</jar>
	</target>
	
	<target name="run" depends="jar">
		<echo>Running ${jar.file} </echo>
		<java jar="${jar.file}" fork="true" >
			<arg value="-g"/>
		</java>
	</target>
	
	<target name="dev-run" depends="dev-jar">
			<echo>Running ${jar.file} </echo>
			<java jar="${jar.file}" fork="true" >
				<arg value="-g"/>
			</java>
		</target>
	<target name="doc" depends="init">
		<javadoc destdir="${doc.dir}" author="Tomáš Zelinka" version="2.0"  sourcepath="src">
			
		</javadoc>
	</target>
	
	<target name="dev-doc" depends="">
		<javadoc destdir="${doc.dir}" packagenames="${packages}" sourcepath="${src.dir}" use="true" classpathref="dep.runtime">
					      
		</javadoc>
	</target>
	
	<target name="dev-build" depends="">
		<echo>Compile from ${src.dir} to ${build.dir}</echo>
		<javac destdir="${class.dir}" srcdir="${src.dir}" includeantruntime="false">
	    	<classpath refid="dep.runtime"/>
	    </javac>
	</target>
	
	<target name="dev-jar" depends="dev-build">
		<manifestclasspath property="manifest_cp" jarfile="${jar.file}">
			<classpath refid="dep.runtime" />
		</manifestclasspath>
		<jar destfile="${jar.file}" basedir="${class.dir}">
			<manifest>
		    	<attribute name="Main-Class" value="cz.vutbr.fit.dp.xzelin15.central.Main"/>
				<attribute name="Class-Path" value="${manifest_cp}" />
			</manifest>
		</jar>
	</target>
	
</project>