/**
 * Injekce poruch pro webove sluzby
 * Diplomovy projekt
 * Fakulta informacnich technologii VUT Brno
 * 3.2.2012
 */

package modalWindows;


import java.awt.CardLayout;

import proxyUnit.Condition;
import proxyUnit.ContainsCondition;
import proxyUnit.DestinationCondition;
import proxyUnit.UriCondition;

/**
 * Dialog pro pridani nove podminky do prislusneho pravidla. 
 * @author Martin Zouzelka (xzouze00@stud.fit.vutbr.cz)
 */
public class AddConditionDialog extends javax.swing.JDialog {

	
	private static final String CONTAINS_CONDITION_PANEL = "ContainsCondition";
	private static final String URI_CONDITION_PANEL = "UriCondition";
	private static final String DESTINATION_CONDITION_PANEL = "DestinationCondition";
	
	private static final String[] TYPE_COMBO_BOX_ITEMS= {CONTAINS_CONDITION_PANEL, URI_CONDITION_PANEL,
			DESTINATION_CONDITION_PANEL};
	
	
	private boolean addButtonClicked;
	private int newConditionId;
	private Condition newCondition;
	
	
	/** Creates new form AddConditionDialog */
	public AddConditionDialog(java.awt.Frame parent, boolean modal, int newConditionId) {
		
		super(parent, modal);
		//zobrazit dialog nad hlavnim oknem
		this.setLocationRelativeTo(parent);
		this.setLocation(this.getX() - 200, this.getY() - 200);
		
		this.newConditionId= newConditionId;
		addButtonClicked= false;
		initComponents();
		//vychozi oznaceni tlacitka Pridat
		this.getRootPane().setDefaultButton(addButton);
	}

	/**
	 * Metoda pro zjisteni, zda bylo kliknuto na tlacitko "pridat"
	 * @return true, pokud bylo stisknuto 
	 */
	public boolean isAddButtonClicked() {
		
		return addButtonClicked;
	}

	/**
	 * Metoda pro ziskani nove vytvorene podminky.
	 * @return nova podminka
	 */
	public Condition getNewCondition() {
		
		return newCondition;
	}
	
		

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        applyButtonGroup = new javax.swing.ButtonGroup();
        typeLabel = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox(TYPE_COMBO_BOX_ITEMS);
        settingsPanel = new javax.swing.JPanel();
        containsConditionPanel = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        uriConditionPanel = new javax.swing.JPanel();
        uriLabel = new javax.swing.JLabel();
        uriTextField = new javax.swing.JTextField();
        destinationConditionPanel = new javax.swing.JPanel();
        requestRadioButton = new javax.swing.JRadioButton();
        responseRadioButton = new javax.swing.JRadioButton();
        applyLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add condition");
        setResizable(false);

        typeLabel.setText("Condition type:");

        typeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeComboBoxItemStateChanged(evt);
            }
        });

        settingsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Settings"));
        settingsPanel.setLayout(new java.awt.CardLayout());

        searchLabel.setText("Searched text:");

        javax.swing.GroupLayout containsConditionPanelLayout = new javax.swing.GroupLayout(containsConditionPanel);
        containsConditionPanel.setLayout(containsConditionPanelLayout);
        containsConditionPanelLayout.setHorizontalGroup(
            containsConditionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containsConditionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addContainerGap())
        );
        containsConditionPanelLayout.setVerticalGroup(
            containsConditionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containsConditionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containsConditionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchLabel)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(271, Short.MAX_VALUE))
        );

        settingsPanel.add(containsConditionPanel, "ContainsCondition");

        uriLabel.setText("Part of URI address:");

        javax.swing.GroupLayout uriConditionPanelLayout = new javax.swing.GroupLayout(uriConditionPanel);
        uriConditionPanel.setLayout(uriConditionPanelLayout);
        uriConditionPanelLayout.setHorizontalGroup(
            uriConditionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uriConditionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(uriLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(uriTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                .addContainerGap())
        );
        uriConditionPanelLayout.setVerticalGroup(
            uriConditionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uriConditionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(uriConditionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uriLabel)
                    .addComponent(uriTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(271, Short.MAX_VALUE))
        );

        settingsPanel.add(uriConditionPanel, "UriCondition");

        applyButtonGroup.add(requestRadioButton);
        requestRadioButton.setSelected(true);
        requestRadioButton.setText("Http request");

        applyButtonGroup.add(responseRadioButton);
        responseRadioButton.setText("Http response");

        applyLabel.setText("Apply only to:");

        javax.swing.GroupLayout destinationConditionPanelLayout = new javax.swing.GroupLayout(destinationConditionPanel);
        destinationConditionPanel.setLayout(destinationConditionPanelLayout);
        destinationConditionPanelLayout.setHorizontalGroup(
            destinationConditionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(destinationConditionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(applyLabel)
                .addGap(18, 18, 18)
                .addGroup(destinationConditionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(responseRadioButton)
                    .addComponent(requestRadioButton))
                .addContainerGap(229, Short.MAX_VALUE))
        );
        destinationConditionPanelLayout.setVerticalGroup(
            destinationConditionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(destinationConditionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(destinationConditionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applyLabel)
                    .addComponent(requestRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(responseRadioButton)
                .addContainerGap(244, Short.MAX_VALUE))
        );

        settingsPanel.add(destinationConditionPanel, "DestinationCondition");

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(settingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(typeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeLabel)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(settingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(addButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void typeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeComboBoxItemStateChanged
		
		//pri zmene vybraneho typu podminky se zobrazi prislusny panel s nastavenim
		CardLayout cardLayout= (CardLayout) settingsPanel.getLayout();
		cardLayout.show(settingsPanel, (String) evt.getItem());
	}//GEN-LAST:event_typeComboBoxItemStateChanged

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
		
		this.setVisible(false);
	}//GEN-LAST:event_cancelButtonActionPerformed

	private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
		
		//vytvorime novy objekt podminky v zavislosti na uzivatelskem nastaveni dialogu
		addButtonClicked= true;
		String selectedItem= (String) typeComboBox.getSelectedItem();
		if (selectedItem.equals(CONTAINS_CONDITION_PANEL)) {
			newCondition= new ContainsCondition(newConditionId, searchTextField.getText());
		}
		
		if (selectedItem.equals(URI_CONDITION_PANEL)) {
			newCondition= new UriCondition(newConditionId, uriTextField.getText());
		}
		
		if (selectedItem.equals(DESTINATION_CONDITION_PANEL)) {
			if (requestRadioButton.isSelected())
				newCondition= new DestinationCondition(newConditionId, true);
			else
				newCondition= new DestinationCondition(newConditionId, false);
		}
		
		this.setVisible(false);
	}//GEN-LAST:event_addButtonActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		
		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				AddConditionDialog dialog = new AddConditionDialog(new javax.swing.JFrame(), true, 0);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {

					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.ButtonGroup applyButtonGroup;
    private javax.swing.JLabel applyLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel containsConditionPanel;
    private javax.swing.JPanel destinationConditionPanel;
    private javax.swing.JRadioButton requestRadioButton;
    private javax.swing.JRadioButton responseRadioButton;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JComboBox typeComboBox;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JPanel uriConditionPanel;
    private javax.swing.JLabel uriLabel;
    private javax.swing.JTextField uriTextField;
    // End of variables declaration//GEN-END:variables
}
